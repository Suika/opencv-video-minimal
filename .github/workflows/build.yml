name: Build OpenCV
on:
  push:
    branches: master
  workflow_dispatch: []

jobs:
  build:
    runs-on: [ubuntu-latest]
    strategy:
      matrix:
        buildx_arch: [linux/amd64,linux/386,linux/arm/v6,linux/arm/v7,linux/arm64]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Set env
        run: echo "BA_TAG=$(echo '${{ matrix.buildx_arch }}' | rev | cut -d "/" -f 1 | rev)" >> $GITHUB_ENV
      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: |
            ghcr.io/suika/opencv-video-minimal
            suika/opencv-video-minimal
          flavor: |
            latest=false
          labels: |
            org.opencontainers.image.title=opencv
            org.opencontainers.image.vendor=suika
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: "--debug"
      -
        name: Login to Docker Hub
        if: false
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      -
        name: Login to GHCR
        if: false
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      -
        name: Build against ${{ env.BA_TAG }}
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          file: ./Dockerfile
          tags: ghcr.io/suika/opencv-video-minimal:${{ env.BA_TAG }},suika/opencv-video-minimal:${{ env.BA_TAG }}
          platforms: ${{ matrix.buildx_arch }}
          labels: ${{ steps.docker_meta.outputs.labels }}
        env:
          buildx_arch_var: ${{ matrix.buildx_arch }}
name: buildx
on:
  pull_request:
    branches: master
  push:
    branches: master

jobs:
  build:
    runs-on: [ubuntu-latest]
    strategy:
      matrix:
        buildx_arch: [linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,linux/386,linux/arm/v7,linux/arm/v6]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Set env
        run: echo "BA_TAG=$(echo '${{ matrix.buildx_arch }}' | cut -d "/" -f 1)" >> $GITHUB_ENV
      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: |
            ghcr.io/suika/opencv-video-minimal
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: "--debug"
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      -
        name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      -
        name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ./Dockerfile
          tags: ghcr.io/suika/opencv-video-minimal:${{ env.BA_TAG }}
          platforms: ${{ matrix.buildx_arch }}
          labels: |
            ${{ steps.docker_meta.outputs.labels }}
            org.opencontainers.image.title=opencv
            org.opencontainers.image.vendor=suika
        env:
          buildx_arch_var: ${{ matrix.buildx_arch }}
  manifest:
    runs-on: [ubuntu-latest]
    needs: [build]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: "--debug"
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      -
        name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      -
        name: Create manifest
        run: |
          docker manifest create ghcr.io/suika/opencv-video-minimal:4.5-py3.8 \
            ghcr.io/suika/opencv-video-minimal:amd64 \
            ghcr.io/suika/opencv-video-minimal:arm64 \
            ghcr.io/suika/opencv-video-minimal:ppc64le \
            ghcr.io/suika/opencv-video-minimal:s390x \
            ghcr.io/suika/opencv-video-minimal:386 \
            ghcr.io/suika/opencv-video-minimal:v7 \
            ghcr.io/suika/opencv-video-minimal:v6
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
      -
        name: Push manifest
        run: |
            docker manifest push ghcr.io/suika/opencv-video-minimal:4.5-py3.8
            docker manifest push ghcr.io/suika/opencv-video-minimal:latest